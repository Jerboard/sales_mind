from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

import db
from settings import conf
from enums import CB, Action


# –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
def get_back_kb(cb: str = CB.COM_START.value, value: str = Action.BACK.value) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{cb}:{value}')
    return kb.adjust(1).as_markup()


# –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
def get_confirm_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data=f'{CB.ACCEPT.value}')
    return kb.adjust(1).as_markup()


# –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
def get_main_menu_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üß† –ß—Ç–æ —è —É–º–µ—é', callback_data=f'{CB.INFO_TEXT.value}:1:com_start')
    kb.button(text='üí≥ –¢–∞—Ä–∏—Ñ—ã –∏ –¥–æ—Å—Ç—É–ø', callback_data=f'{CB.PAYMENT_START.value}')
    kb.button(text='üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å', callback_data=f'{CB.GPT_START.value}:{Action.EDIT.value}')
    kb.button(text='‚öôÔ∏è –ü–æ–º–æ—â—å', callback_data=f'{CB.INFO_START.value}')

    return kb.adjust(1).as_markup()


# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def get_prompt_categories_kb(categories: list[db.PromptCategory]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for category in categories:
        kb.button(text=category.name, callback_data=f'{CB.GPT_CATEGORY.value}:{category.id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{CB.COM_START.value}')
    return kb.adjust(1).as_markup()


# –ü—Ä–æ–º–ø—Ç–∞
def get_prompt_kb(prompts: list[db.Prompt]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for prompt in prompts:
        kb.button(text=prompt.name, callback_data=f'{CB.GPT_PROMPT.value}:{prompt.id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{CB.GPT_START.value}:{Action.EDIT.value}')
    return kb.adjust(1).as_markup()


# –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
def get_new_query_kb(message_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üëç', callback_data=f'{CB.GPT_RATE.value}:{message_id}:1')
    kb.button(text='üëé', callback_data=f'{CB.GPT_RATE.value}:{message_id}:0')
    kb.button(text='üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç', callback_data=f'{CB.GPT_REPEAT.value}:{message_id}')
    kb.button(text='üíª –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π', callback_data=f'{CB.GPT_START.value}:{Action.NEW.value}')

    return kb.adjust(2, 1).as_markup()


# –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
def get_payment_kb(tariffs: list[db.Tariff]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for tariff in tariffs:
        kb.button(text=tariff.name, callback_data=f'{CB.PAYMENT_TARIFF.value}:{tariff.id}')
    kb.button(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'{CB.COM_START.value}')

    return kb.adjust(1).as_markup()


# –ò–Ω—Ñ–æ –∫–Ω–æ–ø–∫–∏
def get_info_menu_kb(info: list[db.Info]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for i in info:
        kb.button(text=i.name, callback_data=f'{CB.INFO_TEXT.value}:{i.id}:{CB.INFO_START.value}')
    kb.button(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'{CB.COM_START.value}')

    return kb.adjust(1).as_markup()
