from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters.command import CommandStart, Command

import keyboards as kb
import utils as ut
import db
from settings import conf, log_error
from init import main_router, bot
from enums import CB, MenuCommand, Action


@main_router.message(CommandStart())
async def com_start(msg: Message, state: FSMContext):
    await state.clear()

    await db.User.add(msg.from_user.id, msg.from_user.full_name, msg.from_user.username)

    user = await db.User.get_by_id(msg.from_user.id)

    # –µ—Å–ª–∏ –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª–∞ —Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å
    if user.is_accepted:
        await ut.send_main_menu(user_id=user.id)
    else:
        text = ('–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –ø—Ä–∏–Ω—è—Ç—å '
                '<a href="https://telegra.ph/Politika-ispolzovaniya-i-vozvrata--SalesMind-AI-06-22">'
                '–ø–æ–ª–∏—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>')
        await msg.answer(text, reply_markup=kb.get_confirm_kb())


@main_router.callback_query(lambda cb: cb.data.startswith(CB.COM_START.value))
async def back_start(cb: CallbackQuery, state: FSMContext):
    await ut.send_main_menu(user_id=cb.from_user.id, msg_id=cb.message.message_id)


@main_router.callback_query(lambda cb: cb.data.startswith(CB.ACCEPT.value))
async def accept(cb: CallbackQuery, state: FSMContext):
    await db.User.update(user_id=cb.from_user.id, is_accepted=True)

    await ut.send_main_menu(user_id=cb.from_user.id, msg_id=cb.message.message_id)


@main_router.callback_query(lambda cb: cb.data.startswith(CB.INFO_START.value))
async def info(cb: CallbackQuery, state: FSMContext):
    text = '–ò–Ω—Ñ–æ –æ –ø—Ä–æ–µ–∫—Ç–µ'
    info = await db.Info.get_all()
    await cb.message.edit_text(text, reply_markup=kb.get_info_menu_kb(info))


@main_router.callback_query(lambda cb: cb.data.startswith(CB.INFO_TEXT.value))
async def payment_start(cb: CallbackQuery, state: FSMContext):
    _, info_id_str, back = cb.data.split(':')
    info_id = int(info_id_str)

    info = await db.Info.get_by_id(info_id)
    await cb.message.edit_text(
        info.description,
        reply_markup=kb.get_back_kb(cb=back)
    )


@main_router.message(Command(MenuCommand.GPT.command))
async def gpt_start_msg(msg: Message, state: FSMContext):

    user = await db.User.get_by_id(msg.from_user.id)

    # –µ—Å–ª–∏ –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª–∞ —Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å
    if not user.is_accepted:
        text = ('–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –ø—Ä–∏–Ω—è—Ç—å '
                '<a href="https://telegra.ph/Politika-ispolzovaniya-i-vozvrata--SalesMind-AI-06-22">'
                '–ø–æ–ª–∏—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>')
        await msg.answer(text, reply_markup=kb.get_confirm_kb())
        return

    await ut.gpt_start(msg.from_user.id)


@main_router.callback_query(lambda cb: cb.data.startswith(CB.GPT_START.value))
async def gpt_start_cb(cb: CallbackQuery, state: FSMContext):
    _, action = cb.data.split(':')

    if action == Action.EDIT.value:
        await ut.gpt_start(cb.from_user.id, msg_id=cb.message.message_id)
    else:
        await ut.gpt_start(cb.from_user.id)



@main_router.callback_query(lambda cb: cb.data.startswith(CB.INFO_DEMO.value))
async def info_demo(cb: CallbackQuery, state: FSMContext):
    text = (
        '''üß† –ß—Ç–æ —è —É–º–µ—é:

üìû –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∑–≤–æ–Ω–∫–æ–≤  
‚Äî –•–æ–ª–æ–¥–Ω—ã–µ, –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ, –∞–ø—Å–µ–π–ª—ã, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞

üì© –°–æ–∑–¥–∞–≤–∞—Ç—å –ø–∏—Å—å–º–∞ –∏ follow-up  
‚Äî –ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–∏—à–∏–Ω—É

üìà –°—Ç—Ä–æ–∏—Ç—å KPI –∏ –ø–ª–∞–Ω—ã  
‚Äî –ú–µ—Å—è—á–Ω—ã–µ —Ü–µ–ª–∏, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–æ–º–∞–Ω–¥—ã

üë• –ü–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞–π–º–æ–º  
‚Äî –í–∞–∫–∞–Ω—Å–∏–∏, —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Å–∫—Ä–∏–ø—Ç—ã –∏–Ω—Ç–µ—Ä–≤—å—é

üß† –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è  
‚Äî –î–æ—Ä–æ–≥–æ, –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏, ¬´–º—ã –ø–æ–¥—É–º–∞–µ–º¬ª ‚Äî –≤—Å—ë —Ä–µ—à–∞–µ–º–æ

üìã –î–∞–≤–∞—Ç—å —á–µ–∫-–ª–∏—Å—Ç—ã  
‚Äî –ü–µ—Ä–µ–¥ –∑–≤–æ–Ω–∫–æ–º, –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏, –ø–µ—Ä–µ–¥ —Å–¥–µ–ª–∫–æ–π

‚ö°Ô∏è –†–∞–±–æ—Ç–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –±–µ–∑ —Å—É–µ—Ç—ã  
‚Äî –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏ –∑–∞–¥–∞—á—É ‚Äî –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–¥–µ–ª–∞—é —è.
'''
    )
    await cb.message.edit_text(text, reply_markup=kb.get_back_kb())


