
services:
  db:
    image: pgvector/pgvector:pg16
    container_name: db_sales_mind
    volumes:
      - ../data:/var/lib/postgresql/data
      - ./pg-init:/docker/dockerfiles/pg-init.d
    restart: unless-stopped
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: redis_sales_mind
    command: >
      redis-server
      --appendonly yes
      --maxmemory-policy noeviction
    restart: unless-stopped
    volumes:
      - redis_data:/data


  pgadmin:
    image: elestio/pgadmin
    container_name: pgadmin_sales_mind
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    env_file:
      - .env


  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight_sm
    ports:
      - "8001:8001"
    restart: unless-stopped
    env_file:
      - .env


  nginx:
    image: nginx:latest
    container_name: nginx_sales_mind
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d/base.conf:/etc/nginx/conf.d/base.conf
      - ../web/static:/var/html/static/
      - ../web/staticfiles:/var/html/staticfiles/
      - ../web/media:/var/html/media/
      - ../logs/nginx:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - web


  web:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileWeb
    container_name: web_sales_mind
    volumes:
      - ../web:/app
      - ../logs/django:/app/logs
      - ../bot/enums:/app/enums
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

  bot:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileBot
      args:
        - --no-cache
    container_name: bot_sales_mind
    command: python main.py
    volumes:
      - ../bot:/app
      - ../logs/bot:/app/logs
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env

  certbot:
    image: certbot/certbot
    container_name: certbot_bcx
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

  certbot-renew:
    image: certbot/certbot
    container_name: certbot_renew_bcx
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ../logs/certbot:/var/log/letsencrypt
    entrypoint: sh -c
    command: >
      "trap exit TERM; while :; do certbot renew --quiet >> /var/log/letsencrypt/renew.log 2>&1; sleep 12h & wait $${!}; done;"
    restart: unless-stopped


volumes:
  pgadmin_data:
#  redislabs_data:
  redis_data:
    driver: local
